var searchIndex = new Map(JSON.parse('[["test_rust_service",{"t":"ECECCECCFOOOOONNNNNNNNNHNNNNNHFNNNNNNHNNNHCCHHCHHHHECCCCCCEEEEHHHHHEEHOFOOOOOOOOOOOOOONNNNNNNNHNNNNNNNNNHPPPGNNNNNNNNNNNNNJFJONNNNNHNNHNNNNNHHHHHHHKEKFONNNNMNNMMMNNMMNNN","n":["Config","action","exec","security","service","ActionConfig","config_action","exec","ActionConfig","DEFAULT_MESSAGE_LEN","MAX_MESSAGE_LEN","MAX_TIME_INTERVAL","MESSAGE","TIME_INTERVAL","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deserialize","fmt","from","get_config_file_name","into","to_owned","try_from","try_into","type_id","validate_all_action_config_fields","TimeAction","borrow","borrow_mut","execute","from","into","name","new","try_from","try_into","type_id","get_current_uid","limits","uid","validate_runtime_security","validate_service_user","validation","get_file_descriptor_limit","get_current_uid","validate_runtime_security","validate_service_user","Config","config","config_service","error","logging","monitoring","run","ActionConfig","Config","get_action_config_file_name","get_service_config_file_name","load_action_config","load_config","load_config_by_filename","read_config_file","sanitize_message","validate_all_action_config_fields","validate_all_config_fields","validate_config_field","CONFIG_DIR","Config","DISK_THRESHOLD","INSTALL_DIR","LOG_FILE_PATH","MAX_CONFIG_FIELD_LEN","MAX_FD_LIMIT","MAX_LOG_FILE_SIZE","MAX_LOG_PATH_LEN","MAX_SERVICE_NAME_LEN","MAX_THRESHOLD_PERCENT","MAX_TIME_INTERVAL","MEMORY_THRESHOLD","MIN_FD_LIMIT","MIN_LOG_INTERVAL_MS","SERVICE_NAME","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deserialize","fmt","from","get_config_file_name","into","load","log_file_path","service_name","time_interval","to_owned","try_from","try_into","type_id","validate_all_config_fields","Config","Io","Parse","ServiceError","borrow","borrow_mut","fmt","","from","","","into","source","to_string","try_from","try_into","type_id","CONFIG","FileLogger","LAST_LOG_TIME","LOG_FILE_PATH","borrow","borrow_mut","enabled","flush","from","get_config_value","into","log","map_io_error","new","set_config","try_from","try_into","type_id","write_to_log_file","calculate_usage_percent","check_disk","check_memory","check_resources","check_threshold_and_error","safe_subtract","Action","Config","ServiceConfig","ServiceRunner","actions","add_action","borrow","borrow_mut","default","execute","from","into","load","log_file_path","name","new","run","service_name","time_interval","try_from","try_into","type_id"],"q":[[0,"test_rust_service"],[5,"test_rust_service::action"],[8,"test_rust_service::action::config_action"],[30,"test_rust_service::action::exec"],[41,"test_rust_service::security"],[47,"test_rust_service::security::limits"],[48,"test_rust_service::security::uid"],[49,"test_rust_service::security::validation"],[51,"test_rust_service::service"],[58,"test_rust_service::service::config"],[70,"test_rust_service::service::config_service"],[105,"test_rust_service::service::error"],[122,"test_rust_service::service::logging"],[141,"test_rust_service::service::monitoring"],[147,"test_rust_service::service::run"],[169,"alloc::string"],[170,"core::result"],[171,"serde_core::de"],[172,"core::fmt"],[173,"core::any"],[174,"alloc::boxed"],[175,"core::cmp"],[176,"std::io::error"],[177,"toml::de::error"],[178,"core::error"],[179,"core::option"],[180,"std::sync::once_lock"],[181,"core::sync::atomic"],[182,"log"],[183,"core::ops::function"],[184,"alloc::vec"]],"i":"`````````b0000000000000`00000``B`00000`000`````````````````````````````Bb`0000000000000000000000`000000000`An00`0000000000000```Cj00000`00`00000```````````Dh0000Bd11Dl012200222","f":"`````````{bd}0{bf}{bh}1{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{b}}}b}{{j{j{lc}}}n{}}{{jA`}n}{{}b}{c{{Ab{b}}}Ad}{{{j{b}}{j{lAf}}}Ah}{cc{}}{{}{{j{Aj}}}}{{}c{}}{jc{}}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{jAl}{{{j{b}}}{{Ab{nAn}}}}`?>{{{j{B`}}{j{Bb}}}{{Ab{nAn}}}}86{{{j{B`}}}{{j{Aj}}}}{{}{{Ab{{Bf{Bd}}An}}}}654{{}{{Ab{BhAn}}}}``{{{j{Bb}}}{{Ab{nAn}}}}{{{j{Aj}}d}{{Ab{nAn}}}}`{{}{{Ab{fAn}}}}321```````````{{}{{Ab{bAn}}}}{{}{{Ab{BbAn}}}}{{{j{Aj}}}{{Ab{hAn}}}}{{{j{{Bj{{j{Aj}}}}}}}{{Ab{hAn}}}}{{{j{Aj}}d}{{Ab{hAn}}}}``{{{j{c}}{j{c}}{j{c}}{j{Aj}}}{{Ab{nAn}}}Bl}{Bbh}`{BbBh}11{Bbd}{Bbf}011202003{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{Bb}}}Bb}{{j{j{lc}}}n{}}{{jA`}n}{c{{Ab{Bb}}}Ad}{{{j{Bb}}{j{lAf}}}Ah}{cc{}}{{}{{j{Aj}}}}{{}c{}}{{}{{Ab{BbAn}}}}{{{j{Bb}}}{{j{Aj}}}}0{{{j{Bb}}}f}{jc{}}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{jAl}{{{j{Bb}}}{{Ab{nAn}}}}````{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{An}}{j{lAf}}}Ah}0={BnAn}{C`An}={{{j{An}}}{{Cd{{j{Cb}}}}}}{jh}:98{{}Cf}`{{}Ch}{Cjh}98{{{j{Cj}}{j{Cl}}}Cn}{{{j{Cj}}}n}{cc{}}{{ec}c{}{{Db{{j{Bb}}}{{D`{c}}}}}}{{}c{}}{{{j{Cj}}{j{Dd}}}n}{{{Df{c}}{j{Aj}}}{{Ab{cAn}}}{}}{hCj}{Bbn}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{jAl}{{{j{Aj}}{j{Aj}}}{{Ab{nAn}}}}{{ff{j{Aj}}}{{Ab{fAn}}}}{Bh{{Ab{nAn}}}}0{{{j{Bb}}}{{Ab{nAn}}}}{{fBh{j{Aj}}}{{Ab{nAn}}}}3````{DhDj}{{{Dh{c}}{Bf{Bd}}}{{Dh{c}}}Dl}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{}{{Dh{c}}}Dl}{{{j{Bd}}{j{c}}}{{Ab{nAn}}}Dl}{cc{}}{{}c{}}{{}{{Ab{DlAn}}}}{{{j{Dl}}}{{j{Aj}}}}{{{j{Bd}}}{{j{Aj}}}}6{{{Dh{c}}}{{Ab{n{Bf{Cb}}}}}Dl}2{{{j{Dl}}}f}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{jAl}","D":"Dd","p":[[5,"ActionConfig",8],[1,"usize"],[1,"u64"],[5,"String",169],[1,"reference",null,null,1],[0,"mut"],[1,"unit"],[1,"u8"],[6,"Result",170,null,1],[10,"Deserializer",171],[5,"Formatter",172],[8,"Result",172],[1,"str"],[5,"TypeId",173],[6,"ServiceError",105],[5,"TimeAction",30],[5,"Config",70],[10,"Action",147],[5,"Box",174,null,1],[1,"u32"],[1,"slice"],[10,"PartialOrd",175],[5,"Error",176],[5,"Error",177],[10,"Error",178],[6,"Option",179,null,1],[5,"OnceLock",180],[5,"AtomicU64",181],[5,"FileLogger",122],[5,"Metadata",182],[1,"bool"],[17,"Output"],[10,"FnOnce",183],[5,"Record",182],[8,"Result",176,null,1],[5,"ServiceRunner",147],[5,"Vec",184],[10,"ServiceConfig",147]],"r":[[0,70],[2,5],[5,8],[41,48],[44,49],[45,49],[51,70],[58,8],[59,70],[67,8],[68,70],[148,70]],"b":[[111,"impl-Display-for-ServiceError"],[112,"impl-Debug-for-ServiceError"],[114,"impl-From%3CError%3E-for-ServiceError"],[115,"impl-From%3CError%3E-for-ServiceError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAIcAFwAAABYAGAAAABoAAwAfAAMAJQAAACcAAgArAAEALwABADQACgBEAAEARwAWAF8AAABhAAcAagAHAHMAAQB2AAwAhAAAAIYACgCSAAEAlQAAAJgABAChAAIApQAEAA==","P":[[14,"T"],[16,""],[17,"T"],[18,""],[20,"__D"],[21,""],[22,"T"],[23,""],[24,"U"],[25,"T"],[26,"U,T"],[27,"U"],[28,""],[31,"T"],[33,""],[34,"T"],[35,"U"],[36,""],[38,"U,T"],[39,"U"],[40,""],[69,"T"],[70,""],[86,"T"],[88,""],[89,"T"],[90,""],[91,"__D"],[92,""],[93,"T"],[94,""],[95,"U"],[96,""],[100,"T"],[101,"U,T"],[102,"U"],[103,""],[109,"T"],[111,""],[113,"T"],[114,""],[116,"U"],[117,""],[119,"U,T"],[120,"U"],[121,""],[126,"T"],[128,""],[130,"T"],[131,"T,F"],[132,"U"],[133,""],[134,"T"],[135,""],[137,"U,T"],[138,"U"],[139,""],[152,"C"],[153,"T"],[155,"C"],[157,"T"],[158,"U"],[159,""],[162,"C"],[164,""],[166,"U,T"],[167,"U"],[168,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[6899]}